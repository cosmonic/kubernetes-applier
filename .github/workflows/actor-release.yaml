name: Actor

on:
  push:
    branches: [main]
    paths:
      - "service-applier/**"
    tags:
      - "kubernetes-service-applier-v*"

env:
  CARGO_TERM_COLOR: always
  working-directory: ./service-applier
  WASH_ISSUER_KEY: ${{ secrets.COSMONIC_PUBLIC_ACCOUNT_OFFICIAL }}
  WASH_SUBJECT_KEY: ${{ secrets.COSMONIC_SERVICE_APPLIER }}

jobs:
  build_artifact:
    if: startswith(github.ref, 'refs/tags/') # Only run on tag push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wasmcloud/common-actions/install-wash@main
      - name: Install latest Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Build wasmcloud actor
        run: make
        working-directory: ${{ env.working-directory }}

      - name: Upload signed actor to GH Actions
        uses: actions/upload-artifact@v2
        with:
          name: wasmcloud-actor
          path: ${{ env.working-directory }}/build/*.wasm

  github_release:
    if: startswith(github.ref, 'refs/tags/') # Only run on tag push
    needs: build_artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download signed actor
        uses: actions/download-artifact@v2
        with:
          name: wasmcloud-actor
          path: ${{ env.working-directory }}/build

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.working-directory }}/build/*.wasm
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          draft: false

  artifact_release:
    needs: build_artifact
    if: startswith(github.ref, 'refs/tags/') # Only run on tag push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download signed actor
        uses: actions/download-artifact@v2
        with:
          name: wasmcloud-actor
          path: ${{ env.working-directory }}/build

      - name: Determine artifact metadata
        run: |
          echo "oci-repository=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].name' | sed 's/-/_/g' )" >> $GITHUB_ENV
          echo "oci-version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].version')" >> $GITHUB_ENV
        working-directory: ${{ env.working-directory }}

      - name: Push actor to AzureCR
        uses: wasmcloud/common-actions/oci-artifact-release@main
        with:
          artifact-path: ${{ env.working-directory }}/build/${{ env.oci-repository }}_s.wasm
          oci-url: ${{ secrets.AZURECR_PUSH_URL }}
          oci-repository: ${{ env.oci-repository }}
          oci-version: ${{ env.oci-version }}
          oci-username: ${{ secrets.AZURECR_PUSH_USER }}
          oci-password: ${{ secrets.AZURECR_PUSH_PASSWORD }}
