trigger:
  branches:
    include:
      - "main"
  tags:
    include:
      - "kubernetes-applier-interface-v*"
  paths:
    include:
      - "interface/"
      - ".ci/interface.yml"
pr:
  branches:
    include:
      - "main"
  paths:
    include:
      - "interface/"
      - ".ci/interface.yml"

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: public-templates
      type: github
      endpoint: cosmonic
      name: cosmonic/ado-common

variables:
  - group: "Common Rust Vars"
  - group: "Cosmonic Release Keys"
  - name: working-directory
    value: ./interface/rust
  - name: CRATES_PUBLISH_TOKEN
    value: $[variables.CRATES_PUBLISH_TOKEN]

stages:
  - stage: build_and_check
    jobs:
      - job: build_and_check
        steps:
          - template: steps/install-wash-ubuntu.yml@public-templates
          - template: steps/rust-setup.yml@public-templates
            parameters:
              components:
                - clippy
                - rustfmt
          - task: Cache@2
            inputs:
              key: '"rust-service-applier-interface-target" | "$(Agent.OS)" | "$(working-directory)/Cargo.toml"'
              path: $(working-directory)/target
            displayName: Cache target folder

          - task: Cache@2
            inputs:
              key: '"rust-service-applier-interface-cache" | "$(Agent.OS)" | "$(working-directory)/Cargo.toml"'
              path: $(HOME)/.cargo/registry
            displayName: Cache cargo cache folder

          - template: steps/rust-test.yml@public-templates
            parameters:
              workingDirectory: $(working-directory)

  - stage: release
    dependsOn:
      - build_and_check
    # Only do this stage if the ref is a tag and the previous stage succeeded
    condition: and(succeeded('build_and_check'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    jobs:
      - job: release
        steps:
          - template: steps/rust-setup.yml@public-templates
          - task: Cache@2
            inputs:
              key: '"rust-service-applier-interface-cache" | "$(Agent.OS)" | "$(working-directory)/Cargo.toml"'
              path: $(HOME)/.cargo/registry
            displayName: Cache cargo cache folder

          - template: steps/crate-release.yml@public-templates
            parameters:
              workingDirectory: $(working-directory)
              cratesToken: $(CRATES_PUBLISH_TOKEN)
